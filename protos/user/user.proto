syntax = "proto3";

package user;

option go_package = "fullstack-go-grpc/protos/user";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// Address represents a geographical address.
message Address {
    string country = 1;
    string state = 2;
}

// User represents a user entity.
message User {
    string unique_id = 1;
    string name = 2;
    string email = 3;
    string phone_number = 4;
    google.protobuf.Timestamp dob = 5;
    Address address = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
}

// Requests and Responses for UserService

message CreateUserRequest {
    string name = 1;
    string email = 2;
    string phone_number = 3;
    google.protobuf.Timestamp dob = 4;
    Address address = 5;
}

message CreateUserResponse {
    User user = 1;
}

message GetUserRequest {
    string unique_id = 1;
}

message GetUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string unique_id = 1;
    string name = 2;
    string phone_number = 3;
    Address address = 5;
}

message UpdateUserResponse {
    User user = 1;
}

message DeleteUserRequest {
    string unique_id = 1;
}

message DeleteUserResponse {
    string message = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
    repeated User users = 1;
}

// UserService defines the gRPC service for managing users.
service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }

    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/v1/users/{unique_id}"
        };
    }

    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            put: "/v1/users/{unique_id}"
            body: "*"
        };
    }

    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            delete: "/v1/users/{unique_id}"
        };
    }

    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/v1/users"
        };
    }
}